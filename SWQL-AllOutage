SELECT

Type AS Object,
ObjectPriority,
ObjectID,
(ToString(
DayDiff(0, GETUTCDATE() - MAX(DownTime))) + ' Days ' + 
ToString(
Ceiling((HourDiff(0, GETUTCDATE() - MAX(DownTime)) / 24.0 - Floor(HourDiff(0, GETUTCDATE() - MAX(DownTime)) / 24.0)) * 24)) + ' H ' + 
ToString(
Ceiling((MinuteDiff(0, GETUTCDATE() - MAX(DownTime)) / 60.0 - Floor(MinuteDiff(0, GETUTCDATE() - MAX(DownTime)) / 60.0)) * 60)) + ' M '
) AS Down_Time,
Name,
[IP Address],
Customer,
PercentUsed,
Status,

CASE 
	WHEN ((Type = 'Nodes' or Type = 'IP SLA') AND Status ='2')
		THEN 'Down' 
ELSE Condition 
END AS Condition,
tolocal(DownTime) AS Since
From 
      (
        --section 3.IPSLA
        SELECT 
        T1.Type, 
        '3' AS [ObjectPriority],
        IPSLA.OperationInstanceID AS ObjectID,
        IPSLA.DisplaySource + ' : ' + IPSLA.OperationName +'('+ Tostring(IPSLA.IpSlaOperationNumber)+')' AS Name,
        '' AS [IP Address], 
        '' AS Customer, 
        '' AS PercentUsed,
        --IPSLA.DisplaySource AS Nodes,
        IPSLA.OperationStatusID AS Status,
        tostring(IPSLA.OperationStatusID) AS Condition,
        T1.DownTime
        FROM  
            (	SELECT MAX(EventTime) AS DownTime, NetObjectID, 'IP SLA' AS Type
               FROM    orion.Events
                 WHERE        (EventType = 5000) AND (Message LIKE '%For Query%') AND (Message LIKE '%IP SLA%')
                GROUP BY NetObjectID) AS T1 
            INNER JOIN Orion.IpSla.Operations IPSLA ON T1.NetObjectID = IPSLA.OperationInstanceID
            
            where IPSLA.OperationStatusID='2' or IPSLA.OperationStatusID='0'

        group by T1.Type,
        IPSLA.OperationInstanceID,
        IPSLA.DisplaySource,
        IPSLA.IpSlaOperationNumber,
        IPSLA.OperationName,
        IPSLA.OperationStatusID,
        T1.DownTime

        --order by T1.DownTime DESC

UNION ALL (
        --section 4.Node
        SELECT 
        T1.Type, 
        '4' AS [ObjectPriority],
        Nodes.NodeID AS ObjectID, 
        Nodes.Caption AS Name, 
        Nodes.IP_Address AS [IP Address],
        NodesCustomProperties.Customer,
        '' AS PercentUsed,
        Nodes.Status,
        tostring(Nodes.Status) AS Condition,
        T1.DownTime
        FROM  
            (SELECT MAX(EventTime) AS DownTime, NetworkNode, 'Nodes' AS Type
                   FROM orion.Events
                       WHERE  (EventType = 5000) AND (NetObjectType = 'N') AND (Message LIKE 'For Query Node%') AND (Message LIKE '%Down%')
                    GROUP BY NetworkNode) AS T1 
            INNER JOIN orion.Nodes ON T1.NetworkNode = Nodes.NodeID 
            INNER JOIN Orion.NodesCustomProperties ON Nodes.NodeID = NodesCustomProperties.NodeID 
            WHERE   
                    -- node down or unknown --
                    (Nodes.Status = '2' OR Nodes.Status = '0') AND 
                    -- exclude node unmange or name contain test --
                    (NOT (Nodes.Status = '9') OR (Nodes.Caption LIKE 'test%'))-- AND 
                    -- last 1 hours --
                    --(T1.DownTime > ADDHOUR(-1,GETUTCDATE()))
                    
        group by T1.Type, 
        Nodes.NodeID, 
        Nodes.Caption ,
        NodesCustomProperties.Customer, 
        Nodes.IP_Address,
        T1.DownTime, 
        Nodes.Status
        
        --order by T1.DownTime DESC
        )

UNION ALL (
                        
        --section 5.Volumes 
        SELECT
        T1.Type, 
        '5' AS [ObjectPriority],
        Volumes.VolumeID AS ObjectID,
        Volumes.FullName AS Name,
        Nodes.IP_Address, 
        NodesCustomProperties.Customer, 
        Volumes.VolumePercentUsed,
        Volumes.Status, 
        --Volumes.StatusDescription,
        tostring(
        CASE 	
            -- volumes up & over 90%
            WHEN (T1.type = 'Volumes' AND (Volumes.[Status] = '1' OR Volumes.[Status] = '3' OR Volumes.[Status] = '14') AND Volumes.VolumePercentUsed > 90)
                THEN Round(Volumes.VolumePercentUsed,2) 
        --ELSE '' 
        END) AS Condition,
        T1.DownTime

        FROM  
            (	SELECT        MAX(EventTime) AS DownTime, NetObjectID, 'Volumes' AS Type
                    FROM orion.Events
                        WHERE        (EventType = 5000) AND (NetObjectType = 'V') AND (Message LIKE '%For Query%')
                    GROUP BY NetObjectID) AS T1  
                    INNER JOIN Orion.Volumes ON T1.NetObjectID = Volumes.VolumeID 
                    LEFT OUTER JOIN orion.Nodes ON Volumes.NodeID = Nodes.NodeID 
                    LEFT OUTER JOIN Orion.NodesCustomProperties ON Nodes.NodeID = NodesCustomProperties.NodeID
                    
        where (Not(volumes.status = '0'  or volumes.status = '12'  or volumes.status ='9' )) AND Volumes.VolumePercentUsed > 90
        --where (volumes.status = '1'  or volumes.status = '3'  or volumes.status ='14' )

        group BY

        T1.Type,
        Volumes.VolumeID, 
        Volumes.FullName,
        Nodes.IP_Address, 
        NodesCustomProperties.Customer, 
        Volumes.VolumePercentUsed,
        Volumes.Status, 
        T1.DownTime
        --order by DownTime Desc
        )

    ) AS TBALL

where
            -- customer section
            (NOT 
            (Customer ='TAFS' OR Customer ='CloudFX' OR Customer ='GS ASTRA') 
            )
            AND
            -- group section
            (NOT
            (
            (Type ='Group' AND Name like 'TAFS -%') OR (Type ='Group' AND Name like 'GS ASTRA -%'))
            ) 
            --AND
            --volumes section
             
            -- last 1 hours --
            --(DownTime > ADDHOUR(-1,GETUTCDATE()))

group BY
Type,
ObjectPriority,
ObjectID,
Name,
[IP Address],
Customer,
PercentUsed,
Status,
Condition,
DownTime